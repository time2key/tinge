apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.thaddeussoftware.tinge"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug{
            testCoverageEnabled false
        }
    }
    dataBinding {
        enabled = true
    }
}

repositories {
    mavenCentral()
    google()
    jcenter() // Always put this last as anyone can upload anything to jcenter
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'

    // Kotlin standard library:
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.ext.kotlin_version"

    //kapt "com.android.databinding:compiler:$rootProject.ext.androidStudioVersion"

    //
    // ANDROID ARCHITECTURE COMPONENTS
    // https://developer.android.com/topic/libraries/architecture/adding-components.html
    //

    // ViewModel and LiveData:
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    //annotationProcessor "android.arch.lifecycle:compiler:$rootProject.ext.androidArchLifecycleVersion"
    kapt 'androidx.lifecycle:lifecycle-compiler:2.1.0'
    testImplementation 'androidx.arch.core:core-testing:2.1.0' //LiveData test helpers

    // Room:
    implementation 'androidx.room:room-runtime:2.2.1'
    //annotationProcessor "android.arch.persistence.room:compiler:$rootProject.ext.androidArchRoomVersion"
    kapt 'androidx.room:room-compiler:2.2.1'
    testImplementation 'androidx.room:room-testing:2.2.1' //Room test helpers

    // ReactiveStreams support for LiveData:
    implementation 'androidx.lifecycle:lifecycle-reactivestreams:2.1.0'
    // RxJava support for Room:
    implementation 'androidx.room:room-rxjava2:2.2.1'
    // Paging (for Room):
    implementation 'androidx.paging:paging-runtime:2.1.0'

    //
    // THIRD PARTY LIBRARIES
    //

    // RxJava 2:
    implementation group: 'io.reactivex.rxjava2', name: 'rxjava', version: "$rootProject.ext.rxJavaVersion"
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    // Gson elegant json parsing:
    implementation 'com.google.code.gson:gson:2.8.5'
    // Retrofit elegant HTTP api networking library:
    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    //annotationProcessor "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    kapt "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    // OKHttp networking library:
    implementation "com.squareup.okhttp3:okhttp:$rootProject.ext.okHttpVersion"

    // Allow retrofit to return gson-parsed classes:
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofitVersion"
    // Allow retrofit to return rxjava streams:
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    // Dagger 2 itself:
    implementation "com.google.dagger:dagger:$rootProject.ext.daggerVersion"
    //annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"
    // Dagger 2 Android - allows use of DaggerActivity etc:
    implementation "com.google.dagger:dagger-android:$rootProject.ext.daggerVersion"
    //annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.ext.daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.ext.daggerVersion"
    // Dagger 2 Android for support libraries:
    implementation "com.google.dagger:dagger-android-support:$rootProject.ext.daggerVersion"

    // Data Binding from ObservableList to RecyclerView - https://github.com/evant/binding-collection-adapter:
    implementation 'me.tatarka.bindingcollectionadapter2:bindingcollectionadapter:2.2.0'
    implementation 'me.tatarka.bindingcollectionadapter2:bindingcollectionadapter-recyclerview:2.2.0'

    //
    // TESTING
    //

    // JUnit and Espresso (Standard for every android project):
    testImplementation 'junit:junit:4.12'
    testImplementation 'androidx.annotation:annotation:1.1.0'
    testImplementation 'androidx.test:rules:1.2.0'
    testImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // Mockito test mocking:
    testImplementation 'org.mockito:mockito-core:2.19.0'
    androidTestImplementation 'org.mockito:mockito-android:2.18.3'

    // OKHttp test web server:
    testImplementation "com.squareup.okhttp3:mockwebserver:$rootProject.ext.okHttpVersion"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$rootProject.ext.okHttpVersion"

}

//Required for annotation processing (i.e. Dagger) on kotlin:
kapt {
    generateStubs = true
}