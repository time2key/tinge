apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'

dependencies {
    implementation project(':tingeApiInternalNetworkingClasses')

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // OKHttp mock web server:
    api "com.squareup.okhttp3:mockwebserver:$rootProject.ext.okHttpVersion"

    // Java poet for auto generating java code in annotation processor:
    implementation 'com.squareup:javapoet:1.11.1'

    // Kotlin Reflection api required to use reflection with Kotlin:
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    // Google auto service makes it easier to create annotation processors:
    compileOnly 'com.google.auto.service:auto-service:1.0-rc3'
    kapt "com.google.auto.service:auto-service:1.0-rc3"

    // TESTING:

    // Compile testing compiles java code in a test, to test annotation processor:
    testImplementation 'com.google.testing.compile:compile-testing:0.10'

    // Mockito test mocking:
    testImplementation 'org.mockito:mockito-core:2.19.0'
    // Mockito inline makes it possible to mock final classes:
    testImplementation 'org.mockito:mockito-inline:2.19.0'
}

sourceCompatibility = "8"
targetCompatibility = "8"

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

repositories {
    mavenCentral()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
